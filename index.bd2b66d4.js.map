{"mappings":"YAAA,IAAMA,EAAcC,SAASC,cAAc,uBACrCC,EAAkBF,SAASC,cAAc,WACzCE,EAAiBH,SAASC,cAAc,UAY9CF,EAAYK,UAAUC,IAAI,aAC1BF,EAAeC,UAAUC,IAAI,aAO3BC,MAlBe,sCAkBC,CACdC,QAAS,CACP,YAlBJ,2EAqBGC,MAAK,SAAAC,GAEJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,YAE3B,OAAOH,EAASI,M,IAEjBL,MAAK,SAAAM,GASJ,IAAIC,EAPJhB,EAAYK,UAAUY,OAAO,aAI7Bd,EAAgBE,UAAUC,IAAI,aAI9BU,EAHeD,EAIZG,KAAI,SAAAC,GAEH,MAAO,kBAA+BC,OAAbD,EAAME,GAAG,MAAeD,OAAXD,EAAMG,KAAK,Y,IAElDC,KAAK,IACRvB,EAAYwB,UAAYR,C,IAezBS,OAAM,SAAUC,GAMftB,EAAeC,UAAUY,OAAO,aAChCd,EAAgBE,UAAUC,IAAI,aAC9BqB,QAAQC,IAAIF,E","sources":["src/js/cat-api.js"],"sourcesContent":["const selectBreed = document.querySelector('select.breed-select');\nconst loaderIndicator = document.querySelector('.loader');\nconst errorIndicator = document.querySelector('.error');\n\nconst BASE_URL = 'https://api.thecatapi.com/v1/breeds';\nconst API_KEY =\n  'live_DWnryEvKWXcqeFK76djLNUR95YisUbO5IiYhoUFb6kOXJ7d52fSO10G4XSngGkna';\n\nlet storedBreeds = [];\n\n// loaderIndicator.style.fontWeight = 'bold';\n// loaderIndicator.textContent = 'Loading data, please wait...';\n// errorIndicator.textContent = '';\n// selectBreed.style.display = 'none';\nselectBreed.classList.add('is-hidden');\nerrorIndicator.classList.add('is-hidden');\n\nexport function fetchBreeds() {\n  //console.log(BASE_URL);\n  //console.log(API_KEY);\n  //console.log(selectBreed);\n\n  fetch(BASE_URL, {\n    headers: {\n      'x-api-key': API_KEY,\n    },\n  })\n    .then(response => {\n      //console.log(response);\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return response.json();\n    })\n    .then(data => {\n      //selectBreed.style.display = 'block';\n      selectBreed.classList.remove('is-hidden');\n      //console.log(data);\n      //loaderIndicator.textContent = '';\n      //loaderIndicator.style.display = 'none';\n      loaderIndicator.classList.add('is-hidden');\n      storedBreeds = data;\n      //console.log('storedBreeds', storedBreeds);\n      let markup = null;\n      markup = storedBreeds\n        .map(breed => {\n          //console.log(breed.id, breed.name)\n          return `<option value=\"${breed.id}\">${breed.name}</option>`;\n        })\n        .join('');\n      selectBreed.innerHTML = markup;\n      //console.log(markup);\n\n      //   for (let i = 0; i < storedBreeds.length; i+=1) {\n      //     const breed = storedBreeds[i];\n      //     let option = document.createElement('option');\n      //     //skip any breeds that don't have an image\n      //     if (!breed.image) continue;\n\n      //     //use the current array index\n      //     option.value = breed.id;\n      //     option.innerHTML = `${breed.name}`;\n      //       selectBreed.appendChild(option);\n      //     }\n    })\n    .catch(function (error) {\n      //   loaderIndicator.style.display = 'none';\n      //   errorIndicator.style.color = 'red';\n      //   errorIndicator.style.fontWeight = 'bold';\n      //   errorIndicator.textContent =\n      //     'Oops!! Something went wrong! Try reloading the page!';\n      errorIndicator.classList.remove('is-hidden');\n      loaderIndicator.classList.add('is-hidden');\n      console.log(error);\n    });\n}\n"],"names":["$8994e83c1b13b9e2$var$selectBreed","document","querySelector","$8994e83c1b13b9e2$var$loaderIndicator","$8994e83c1b13b9e2$var$errorIndicator","classList","add","fetch","headers","then","response","ok","Error","statusText","json","data","markup","remove","map","breed","concat","id","name","join","innerHTML","catch","error","console","log"],"version":3,"file":"index.bd2b66d4.js.map"}